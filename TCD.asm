; Projeto de controlador de umidade do solo
; Autor: Kawe Antônio dos Santos Marcelino
; Objetivo: Identificar 2 níveis de umidade do solo através de um sensor
; e acender leds corresponte aos níveis (1. solo muito úmido ou umidade moderada, e 2. solo seco)
#include <p16F873A.inc>
; DEFINIÇÃO DE VARIÁVEIS UTILIZADAS PELO PROGRAMA
CBLOCK 0X20
	; VARIÁVEIS USADAS PARA OS DELAYS
	D1
	D2
	D3
	; VARIÁVEIS PARA ARMAZENAR OS VALORES RECEBIDO PELO CONVERSOR A/D 
	; NO PINO RA0
	CNT0 ; ARMAZENA ADRESL
	CNT1 ; ARMAZENA ADRESH
ENDC
	ORG 0X0000
	GOTO INICIO

;-------- ROTINAS USADAS NO PROGRAMA --------;
; ROTINA DE CONFIGURAÇÃO GERAL DO PROGRAMA
CONFIG_GERAL:
	; SELECIONA BANCO ONDE ESTÁ TRISB
	BANKSEL TRISB
	; DÁ UM CLEAR (0) NO REGISTRO TRISB
	CLRF TRISB
	; SETA RB4, RB5, RB7 COMO OUTPUT
	MOVLW B'00001101'
	; TRISB = W
	MOVWF TRISB

	; SELECIONA BANCO ONDE ESTÁ TRISA
	BANKSEL TRISA
	; SETA TODO TRISA COMO INPUT
	MOVLW B'11111111'
	MOVWF TRISA

	RETURN

; ROTINA DE DELAY ANTES DE LIGAR O SENSOR (20S)
DELAY_1:
LOOP:
	MOVLW 0XB5 ; W = 181
	MOVWF D1 ; D1 = W
	MOVLW 0X99; W = 153
	MOVWF D2 ; D2 = W
	MOVLW 0X2C ; W = 44
	MOVWF D3 ; D3 = W
DELAY_1A:
	DECFSZ D1, F
	GOTO $+2
	DECFSZ D2, F
	GOTO $+2
	DECFSZ D3, F
	GOTO DELAY_1A

	GOTO $+1
	NOP

	RETURN

; ROTINA DEPOIS DE LIGAR O SENSOR (10S)
DELAY_2:
	MOVLW 0X5A ; W = 90
	MOVWF D1 ; D1 = W
	MOVLW 0XCD; W = 205
	MOVWF D2 ; D2 = W
	MOVLW 0X16 ; W = 22
	MOVWF D3 ; D3 = W
DELAY_2A:
	DECFSZ D1, F
	GOTO $+2
	DECFSZ D2, F
	GOTO $+2
	DECFSZ D3, F
	GOTO DELAY_2A

	RETURN

; CONFIGURAÇÃO DO CONVERSOR A/D
ADC_CONFIG:
	; SELECIONA BANCO ONDE ESTÁ ADCON1
	BANKSEL ADCON1
	
	; CONFIGURA AD PARA AJUSTAR À DIREITA
	MOVLW B'10000000'
	MOVWF ADCON1

	; SELECIONA BANCO ONDE ESTÁ ADCON0
	BANKSEL ADCON0
	; ESQUEMA DE CONFIGURAÇÃO DO ADCON0
	; 11 - USA CLOCK INTERNO
	; 000 - SELECIONA PORTA RA0
	; 0 - GODONE EM BAIXO
	; IGNORADO
	; 1 ATIVA A/D
	MOVLW B'11000001'
	MOVWF ADCON0

	RETURN

; ROTINA PARA LEITURA DO CONVERSOR A/D
ADC_LEIA:
	; SELECIONA BANCO ONDE ESTÁ ADCON0
	BANKSEL ADCON0
	; SALVA VALORES EM CNT1 - ALTO E CNT0 - BAIXO
	; INICIA LEITURA
	; PRIMEIRO REGISTRO A SER PREEENCHIDO SERÁ ADRESH
	BSF ADCON0, 2
LOOP_LEIA:
	BTFSC ADCON0, 2
	GOTO LOOP_LEIA

	; SELECIONA BANCO ONDE ESTÁ ADRESH
	BANKSEL ADRESH
	; W = ADRESH
	MOVF ADRESH, W
	; SELECIONA BANCO ONDE ESTÁ CNT1
	BANKSEL CNT1	
	; CNT1 = W
	MOVWF CNT1

	; INICIA DELAY DE (0.5S)
	MOVLW	0X03
	MOVWF	D1
	MOVLW	0X18
	MOVWF	D2
	MOVLW	0X02
	MOVWF	D3
DELAY_LEIA:
	DECFSZ	D1, F
	GOTO	$+2
	DECFSZ	D2, F
	GOTO	$+2
	DECFSZ	D3, F
	GOTO	DELAY_LEIA

	GOTO	$+1
	GOTO	$+1
	GOTO	$+1

	; INICIAL LEITURA DO REGISTRADOR ADRESL
	; SELECIONA BANCO ONDE ESTÁ ADRESL
	BANKSEL ADRESL
	; W = ADRESL
	MOVF ADRESL, W
	; SELECIONA BANCO ONDE ESTÁ CNT0
	BANKSEL CNT0
	; CNT0 = W
	MOVWF CNT0

	RETURN

; ROTINA DE CONFIGURAÇÃO DO SERIAL
CONFIG_SERIAL:
	; SELECIONA BANCO ONDE ESTÁ TXSTA
	BANKSEL TXSTA
	; W RECEBE CONFIGURAÇÃO DOS BITS PARA O REGISTRADOR TXSTA
	; ESQUEMA DE CONFIGURAÇÃO:
	; CSCR - MODO SLAVE
	; TX9 - SELECIONA TRANSMISSÃO POR 8 BITS
	; TXEN - TRANSMISSÃO HABILITADA
	; SYNC - MODO ASSÍNCRONO
	; NÃO IMPLEMENTADO
	; BRGH - MODO ASSÍNCRONO EM ALTA VELOCIDADE
	; TRMT - TSR VAZIO
	; TX9D - COMO A TRANSMISSÃO SERÁ EM 8 BITS, NÃO IMPORTA MUITA O BIT DE PARIDADE
	MOVLW B'00100110'
	; TXSTA = W
	MOVWF TXSTA

	; SELECIONA BANCO ONDE ESTÁ RCSTA
	BANKSEL RCSTA
	; W RECEBE CONFIGURAÇÃO DOS BITS PARA O REGISTRADOR RCSTA
	; ESQUEMA DE CONFIGURAÇÃO:
	; SPEN - PORTA SERIAL ATIVADA
	; RX9 - ATIVA RECEPÇÃO DE 8 BITS
	; SREN - COMO O MODO É ASSÍNCRONO, NÃO IMPORTA
	; CREN - ATIVA RECEBIMENTO CONTÍNUO
	; ADDEN - NÃO IMPORTA MUITO POIS TRANSMISSÃO SERÁ DE 8 BITS
	; FERR - SEM ERRO DE ENQUADRAMENTO
	; OERR - SEM ERRO DE SATURAÇÃO
	; RX9D - COMO A TRANSMISSÃO SERÁ EM 8 BITS, NÃO IMPORTA MUITO A CONFIGURAÇÃO DESSE BIT
	MOVLW B'10010000'
	; RCSTA = W
	MOVWF RCSTA

	; SELECIONA BANCO ONDE ESTÁ SPBRG
	; CONFIGURA VALOR DECIMAL DE SPBRG PARA TAXA DE TRANSMISSÃO 9600 E FOSC = 4MHz
	BANKSEL SPBRG
	; W = 25
	MOVLW D'25'
	; SPBRG = W
	MOVWF SPBRG

	; SELECIONA BANCO ONDE ESTÁ PIE1
	BANKSEL PIE1
	; DÁ UM CLEAR NOS BITS 4 E 5 DO REGISTRADOR PIE1
	BCF PIE1, 4
	BCF PIE1, 5

	RETURN 

; ROTINA DE TRANSMISSÃO DO SERIAL
TRANSMITE_SERIAL:
	; SELECIONA BANCO ONDE ESTÁ CNT1
	BANKSEL CNT1
	; W = CNT1
	MOVF CNT1, W
	; SELECTIONA BANCO ONDE ESTÁ TXREG
	BANKSEL TXREG
	; TXREG RECEBE VALOR DE CTN1 QUE ESTAVA EM W
	MOVWF TXREG
	; SELECTIONA BANCO ONDE ESTÁ TXSTA PARA INICIAR TRANSMISSÃO DO VALOR DE CNT1
	; PELO PINO 17 (TX) DO PIC
	BANKSEL TXSTA
LOOP_SERIAL: ; LOOP DA TRANSMISSÃO
	BTFSS TXSTA, TRMT
	GOTO LOOP_SERIAL
	
	; DELAY DE 0.5S
	MOVLW	0X03
	MOVWF	D1
	MOVLW	0X18
	MOVWF	D2
	MOVLW	0X02
	MOVWF	D3
DELAY_SERIAL:
	DECFSZ	D1, F
	GOTO	$+2
	DECFSZ	D2, F
	GOTO	$+2
	DECFSZ	D3, F
	GOTO	DELAY_SERIAL

	GOTO	$+1
	GOTO	$+1
	GOTO	$+1

	; SELECIONA BANCO ONDE ESTÁ CNT0
	BANKSEL CNT0
	; W = CNT0
	MOVF CNT0, W
	; SELECIONA BANCO ONDE ESTÁ TXREG
	BANKSEL TXREG
	; TXREG RECEBE CNT0 QUE ESTAVA EM W
	MOVWF TXREG
	; SELECTIONA BANCO ONDE ESTÁ TXSTA PARA INICIAR TRANSMISSÃO DO VALOR DE CNT0
	; PELO PINO 17 (TX) DO PIC
	BANKSEL TXSTA
LOOP_SERIAL2: ; LOOP DA TRANSMISSÃO
	BTFSS TXSTA, TRMT
	GOTO LOOP_SERIAL2

	RETURN

; FUNÇÃO PARA IDENTIFICAR OS VALORES DE CNT1
; E DEFINIR NÍVEL DE UMIDADE
ALTERA_LEDS:
	; SELECIONA BANCO ONDE ESTÁ CNT1
	BANKSEL CNT1
	DECFSZ CNT1, 0 ; SE CNT 1 FOR 1, LIGA LED AZUL PRA INDICAR QUE ESTÁ MUITO ÚMIDO
	GOTO PULA ; CNT > 1
	BANKSEL PORTB ; CNT == 1
	BSF PORTB,5 ; ACENDE LED AZUL LIGADO EM RB5
	GOTO FIM_LEDS ; VAI PARA O FIM DA ROTINA
PULA: ; VERIFICA SE ESTÁ COM UMIDADE MODERADA
	DECF CNT1, F ; DECREMENTA EM 1 CNT1 E SALVA EM CNT1
	DECFSZ CNT1, 0 ; CASO CNT1 - 1 FOR IGUAL A ZERO, LIGA LED AZUL PARA INDICAR NÍVEL DE UMIDADE MODERADO
	GOTO PULA_2 ; CNT1 - 1 != 0
	BANKSEL PORTB ; CNT1 - 1 == 0
	BSF PORTB,5 ; ACENDE LED AZUL LIGADO EM RB5
	GOTO FIM_LEDS ; VAI PARA O FIM DA ROTINA
PULA_2: ; ACENDE LED VERMELHO INDICANDO NÍVEL DE UMIDADE BAIXO, OU SEJA, SECO
	BANKSEL PORTB ; SELECIONA PORTB 
	BSF PORTB,4 ; ACENDE LED VERMELHO LIGADO EM RB4
	GOTO FIM_LEDS ; VAI PARA O FIM DA ROTINA
FIM_LEDS: RETURN ; FIM DA ROTINA
;--------
; INÍCIO DO PROGRAMA PRINCIPAL
INICIO:
	; SEQUÊNCIA DE INSTRUÇÕES PARA PREPARAÇÃO DO PIC
	CALL CONFIG_GERAL ; CHAMA ROTINA PARA CONFIGURAÇÃO GERAL DO PIC
 	CALL CONFIG_SERIAL ; CHAMA ROTINA PARA CONFIGURAÇÃO TRANSMISSÃO NO SERIAL
	BANKSEL PORTB ; SELECIONA BANCO ONDE ESTÁ PORTB
	; DESLIGA LEDS PARA INDICAÇÃO DO NÍVEL DE UMIDADE
	BCF PORTB,5
	BCF PORTB,4
VOLTA: ; LOOP ÚNICO E PRINCIPAL DO PROGRAMA
	; SELECIONA BANCO ONDE ESTÁ PORTB
	BANKSEL PORTB
	; LIGA LED QUE INDICA QUE SENSOR ESTÁ LIGADO
	; E LIGA SENSOR NO MESMO MOMENTO
	; JÁ QUE PINO DE VCC DO SENSOR RECEBE SINAL DO PINO RB7 DO PIC
	BSF PORTB,7
	
	; DELAY DE 10S PARA PREPARAÇÃO DA LEITURA DO SENSOR
	CALL DELAY_2
	; CHAMA ROTINA DE CONFIGURAÇÃO DO CONVERSOR AD
	CALL ADC_CONFIG
	; CHAMA ROTINA DE LEITURA DO CONVERSOR AD QUE LÊ O QUE O SENSOR ESTÁ ENVIANDO
	; ATRAVÉS DO PINO RA0 DO PIC
	CALL ADC_LEIA

	; CHAMA ROTINA PARA TRANSMITIR VIA SERIAL
	CALL TRANSMITE_SERIAL

	; SELECIONA BANCO ONDE ESTÁ PORTB
	BANKSEL PORTB
	; DESLIGA LED DO PINO RB7, DESLIGANDO O SENSOR JUNTO
	BCF PORTB,7
	; CHAMA ROTINA PARA ALTERAR OS LEDS MOSTRANDO QUAL FOI O NÍVEL DE UMIDADE IDENTIFICADO PELO SENSOR
	CALL ALTERA_LEDS
	; CHAMA ROTINA DE 10S 
	CALL DELAY_2

	; SELECIONA BANCO ONDE ESTÁ PORTB
	BANKSEL PORTB

	; DESLIGA TODOS OS LEDS QUE INDICAM NÍVEL DE UMIDADE
	BCF PORTB,5
	BCF PORTB,4
	
	; CHAMA DELAY DE 10S
	CALL DELAY_2

	; VOLTA PARA A LABEL 'VOLTA',
	; CRIANDO LOOP ETERNO DE LEITURA E VERIFICAÇÃO DE UMIDADE DO SOLO
	GOTO VOLTA

	END ; FIM DA ROTINA QUE NUNCA É ALCANÇADO
